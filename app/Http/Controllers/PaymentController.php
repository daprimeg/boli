<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Stripe\Charge;
use Stripe\Exception\CardException;
use Stripe\Stripe;

class PaymentController extends Controller
{
    public function showPaymentForm()
    {
        return view('payment.twelve-pounds');
    }

    public function processPayment(Request $request)
    {
        // Ensure the user is authenticated (optional, but recommended)
        if (!Auth::check()) {
            return redirect()->route('login'); // Or handle unauthenticated users appropriately
        }

        $user = Auth::user();
        $amountInPounds = 12.00;
        $amountInCents = $amountInPounds * 100;

        Stripe::setApiKey(config('services.stripe.secret'));

        try {
            $charge = Charge::create([
                'amount' => $amountInCents,
                'currency' => 'gbp',
                'description' => 'Payment of Â£' . $amountInPounds,
                'source' => $request->stripeToken, // Token generated by Stripe.js
                'customer' => $user->stripe_id ?? null, // Associate with customer if exists
                'receipt_email' => $user->email,
                'metadata' => ['order_id' => uniqid()], // Optional order tracking
            ]);

            // Optionally update user's Stripe ID if it's their first payment
            if (!$user->stripe_id && $charge->customer) {
                $user->update(['stripe_id' => $charge->customer]);
            }

            // Redirect to a success page
            return redirect()->route('payment.success')->with('chargeId', $charge->id);

        } catch (CardException $e) {
            return back()->withErrors(['message' => $e->getMessage()]);
        } catch (\Exception $e) {
            return back()->withErrors(['message' => 'An unexpected error occurred. Please try again later.']);
        }
    }

    public function paymentSuccess(Request $request)
    {
        $chargeId = $request->session()->get('chargeId');
        return view('payment.success', ['chargeId' => $chargeId]);
    }

    public function paymentCancel()
    {
        return view('payment.cancel');
    }
}